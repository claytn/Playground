(str '(\c \l \a \y\))
)
(clojure.string/join '(\c \l))
(load-file "src/run_length_encoding.clj")
(run-length-encoding "AAA")
(run-length-encoding/run-length-encode "AAA")
(run-length-encoding "AAA")
(load-file "src/run_length_encoding.clj")
(run-length-encoding/run-length-encode "AAA")
(run-length-encoding/run-length-encode "AAABB")
(load-file "src/run_length_encoding.clj")
(tdest {:count 6})
(run-length-encoding/tdest {:count 6})
(run-length-encoding/tdest {:count 6} \C)
(load-file "src/run_length_encoding.clj")
(run-length-encoding/tdest {:count 6 :current \A :encoding "wof"} \C)
(run-length-encoding/encode {:count 1 :current \A :encoding "3B"} \A)
(load-file "src/run_length_encoding.clj")
(run-length-encoding/run-length-encode "AAABB")
(load-file "src/run_length_encoding.clj")
(run-length-encoding/run-length-encode "AAABCCCCCD")
(first "clato")
(str "hello" \c)
(load-file "src/run_length_encoding.clj"
)
(load-file "src/run_length_encoding.clj")
(in-ns 'run-length-encoding)
(doc run-length-encode)
(run-length-encode "WWW")
(count '())
(load-file "src/run_length_encoding.clj")
(run-length-encode "WWW")
(load-file "src/run_length_encoding.clj")
(run-length-encode "WWW")
(run-length-encode "WWWCCCA")
(- 62 39)
(load-file "src/run_length_encoding")
(load-file "src/run_length_encoding.clj")
(in-ns 'run-length-encoding)
(run-length-encode "")
(run-length-encode "WW")
(run-length-encode "AAAAAAWW")
(run-length-encode "AAAAAAWWAAA")
(run-length-encode "ABCDEFG")
(first "34")
(read-string "34hello")
(number? \3)
(re-matches #"[0-9]" \8)
(defn num-char? [char] (and (>= char \0) (<= char \9)))
(num-char? \9)
(defn num-char? [char] (and (>= (int char) (int \0)) (<= (int char) (int \9))))
(num-char? \9)
(num-char? \t)
(num-char? \0)
(num-char? \1)
(num-char? \2)
(num-char? \3)
(clojure.string/join '(\1 \2))
(int "")
(read-string "")
(read-string "1")
(empty? "")
(load-file "src/run_length_encoding.clj")
(run-length-decode)
(run-length-decode (run-length-encode "WWWWFF"))
(repeat 2 3)
(load-file "src/run_length_encoding.clj")
(run-length-decode (run-length-encode "WWWWFF"))
