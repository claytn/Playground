(str '(\c \l \a \y\))
)
(clojure.string/join '(\c \l))
(load-file "src/run_length_encoding.clj")
(run-length-encoding "AAA")
(run-length-encoding/run-length-encode "AAA")
(run-length-encoding "AAA")
(load-file "src/run_length_encoding.clj")
(run-length-encoding/run-length-encode "AAA")
(run-length-encoding/run-length-encode "AAABB")
(load-file "src/run_length_encoding.clj")
(tdest {:count 6})
(run-length-encoding/tdest {:count 6})
(run-length-encoding/tdest {:count 6} \C)
(load-file "src/run_length_encoding.clj")
(run-length-encoding/tdest {:count 6 :current \A :encoding "wof"} \C)
(run-length-encoding/encode {:count 1 :current \A :encoding "3B"} \A)
(load-file "src/run_length_encoding.clj")
(run-length-encoding/run-length-encode "AAABB")
(load-file "src/run_length_encoding.clj")
(run-length-encoding/run-length-encode "AAABCCCCCD")
(first "clato")
(str "hello" \c)
(load-file "src/run_length_encoding.clj"
)
(load-file "src/run_length_encoding.clj")
(in-ns 'run-length-encoding)
(doc run-length-encode)
(run-length-encode "WWW")
(count '())
(load-file "src/run_length_encoding.clj")
(run-length-encode "WWW")
(load-file "src/run_length_encoding.clj")
(run-length-encode "WWW")
(run-length-encode "WWWCCCA")
