(def test :whats/up)
test
(load-file "src/bob.clj")
(response-for "woof")
(bob/response-for "woof")
(bob/response-for "WOOF")
(clojure.string/capitalize "WOOF")
(load-file "src/bob.clj")
(bob/response-for "WOOF?")
(bob/response-for "WOOF")
(bob/response-for "WOOf")
(bob/response-for "cats?")
(bob/response-for "  ")
(load-file "src/bob.clj")
(bob/response-for "  ")
(let [a "a" b a] b)
(let [b a a "a"] b)
(bob/response-for "  ")
(load-file "src/bob.clj")
(bob/response-for "  ")
(re-matches #"[a-zA-Z]+" "5")
(re-matches #"[a-zA-Z]+" "woof")
(re-matches #"[a-zA-Z]+" "1, 2, 3, 4!")
(re-matches #"[a-zA-Z]+" "1, 2, 3, 4a!")
(re-matches #"[a-zA-Z]+" "1, 2, 3b, 4a!")
(re-matches #"[a-zA-Z]+" "1, 2, b, 4a!")
(re-matches #"[a-zA-Z]+" "a 2, b, 4a!")
(includes? #"[a-zA-Z]+" "a 2, b, 4a!")
(re-find #"[a-zA-Z]+" "a 2, b, 4a!")
(re-find #"[a-zA-Z]+" "2, b, 4a!")
(re-find #"[a-zA-Z]+" "2,, 4a!")
(re-find #"[a-zA-Z]" "2,, 4a!")
(re-find #"[a-zA-Z]" "2,, 4aaaa!")
