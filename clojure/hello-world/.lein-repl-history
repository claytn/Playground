(cons 1 '(2 3))
(rest [1 2 3])
(first #{:a :b :c})
(first #{:a :b :c :d })
(map str ["a" "b"] ["A" "B" "C"])
(map str ["a" "b" "c"] ["A" "B" "C"])
(map inc [1 2 3])
(reduce + [1 2 3])
(reduce (fn [acc [key val]]
            (assoc acc key (inc val)))
         {:min 15 :max 24})
(reduce (fn [acc [key val]]
            (assoc acc key (inc val)))
         {}
         {:min 15 :max 24})
